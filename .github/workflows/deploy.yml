name: 🚀 Deploy Portfolio

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Job para build e testes
  build-and-test:
    name: 🔨 Build & Test
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'portfolio-angular/package-lock.json'
        
    - name: 📋 Install dependencies
      working-directory: ./portfolio-angular
      run: npm ci
      
    - name: 🧪 Run tests
      working-directory: ./portfolio-angular
      run: npm run test -- --watch=false --browsers=ChromeHeadless
      
    - name: 🔍 Lint code
      working-directory: ./portfolio-angular
      run: npm run lint
      continue-on-error: true
      
    - name: 🏗️ Build application
      working-directory: ./portfolio-angular
      run: npm run build:prod
      
    - name: 📊 Analyze bundle size
      working-directory: ./portfolio-angular
      run: |
        npm run analyze -- --no-open
        echo "Bundle analysis completed"
      continue-on-error: true
      
    - name: 📤 Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-files
        path: portfolio-angular/dist/
        retention-days: 1

  # Job para deploy no Vercel (apenas no main)
  deploy-vercel:
    name: 🌐 Deploy to Vercel
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'portfolio-angular/package-lock.json'
        
    - name: 📋 Install dependencies
      working-directory: ./portfolio-angular
      run: npm ci
      
    - name: 🏗️ Build for production
      working-directory: ./portfolio-angular
      run: npm run build:prod
      
    - name: 🚀 Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./portfolio-angular
        vercel-args: '--prod'

  # Job para deploy no Netlify (backup)
  deploy-netlify:
    name: 🌍 Deploy to Netlify
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'portfolio-angular/package-lock.json'
        
    - name: 📋 Install dependencies
      working-directory: ./portfolio-angular
      run: npm ci
      
    - name: 🏗️ Build for production
      working-directory: ./portfolio-angular
      run: npm run build:prod
      
    - name: 🌐 Deploy to Netlify
      uses: nwtgck/actions-netlify@v3.0
      with:
        publish-dir: './portfolio-angular/dist/portfolio-angular'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions"
        enable-pull-request-comment: false
        enable-commit-comment: true
        overwrites-pull-request-comment: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      timeout-minutes: 1

  # Job para GitHub Pages (alternativa)
  deploy-github-pages:
    name: 📄 Deploy to GitHub Pages
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    # Configurar permissões para GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'portfolio-angular/package-lock.json'
        
    - name: 📋 Install dependencies
      working-directory: ./portfolio-angular
      run: npm ci
      
    - name: 🏗️ Build for GitHub Pages
      working-directory: ./portfolio-angular
      run: |
        # Usar o nome do repositório para base-href
        REPO_NAME=$(echo ${{ github.repository }} | cut -d'/' -f2)
        npm run build:prod -- --base-href="/$REPO_NAME/"
      
    - name: 📤 Setup Pages
      uses: actions/configure-pages@v4
      
    - name: 📦 Upload to Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: './portfolio-angular/dist/portfolio-angular'
        
    - name: 🚀 Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  # Job para notificações
  notify:
    name: 📢 Notify Deployment
    needs: [deploy-vercel, deploy-netlify, deploy-github-pages]
    runs-on: ubuntu-latest
    if: always() && github.ref == 'refs/heads/main'
    
    steps:
    - name: 📧 Send notification
      run: |
        echo "🎉 Deployment completed!"
        echo "Vercel: ${{ needs.deploy-vercel.result }}"
        echo "Netlify: ${{ needs.deploy-netlify.result }}"
        echo "GitHub Pages: ${{ needs.deploy-github-pages.result }}"
        
        # Aqui você pode adicionar notificações por email, Slack, etc.
        # Exemplo: curl para webhook do Slack
        # curl -X POST -H 'Content-type: application/json' \
        #   --data '{"text":"Portfolio deployed successfully! 🚀"}' \
        #   ${{ secrets.SLACK_WEBHOOK_URL }}